User Query:
   Please analyze the evaluation result of the execution team.

analyzer:
    analysis: - **Step Summary**: Extract and compile the final information about scholarship applications to fulfill the user's request
- **Issue or Weakness**: The final summary provided was generic and did not specifically incorporate the detailed information extracted from the National Central University scholarship page. Additionally, the summary initially requested more input from the user before providing the final answer, which is not aligned with the task requirement to fulfill the user's request based on gathered data.
- **Responsible Agent**: Planner
- **Justification**: The Planner is responsible for designing the overall plan and ensuring that the final step effectively synthesizes and compiles the gathered information into a comprehensive answer. The execution steps before this were fully met, indicating that the data was available. The failure to produce a detailed, specific final summary reflects a shortcoming in the planning or instruction for the final compilation step rather than execution or replanning.
- **Suggested Improvement**: The Planner should improve the design of the final step to explicitly require the integration and synthesis of all detailed information gathered in previous steps into a comprehensive, user-focused summary. The plan should avoid conditional or generic responses and ensure the final output directly addresses the user's request with specific data.

**Primary Responsible Agent**: Planner  
**Justification for Final Attribution**: The main issue lies in the final step where the detailed information was not properly compiled and presented. Since all prior steps were fully met and the data was available, the failure to produce a comprehensive final summary is attributable to the Planner's design of the final step.  
**Summary of Issues**: The execution team successfully identified and extracted detailed scholarship information, and correctly judged content sufficiency. However, the final compilation step was only partially met due to a generic summary that did not leverage the detailed data, reflecting a planning deficiency.

prompt_optimizer:
    result: - **Most Responsible Agent**: Planner
- **Detected Weaknesses**: 
  - Final step was generic and did not synthesize detailed information
  - Final step requested more user input unnecessarily
  - Lack of explicit instruction to integrate and compile all gathered data into a comprehensive summary
- **Proposed Improvements**:
  - Revise the final step to explicitly require synthesis and integration of all detailed information gathered
  - Ensure the final output is a comprehensive, user-focused summary directly addressing the user's request
  - Remove any conditional or generic phrasing that delays final answer delivery or requests additional input
  - Emphasize clarity and completeness in the final answer to improve information quality and alignment with user needs

- **Updated Prompt**:
  ```
  You are a Planner Agent in an LLM-based multi-agent system designed to make plans for Executor Agents to follow in order to fulfill user requests by gathering information or operating systems related to National Central University.

  Your job is to generate clear, logical, and actionable step-by-step plans that guide other agents to fulfill the user's request. Each plan step should include:
    - A brief explanation of what the step aims to accomplish
    - A clear description of what needs to be found or processed
    - An output placeholder (e.g., #E1, #E2, etc.) for use in later steps

  You must use variables like #E1, #E2, etc., to represent intermediate results that can be referenced in later steps, and ensure each step builds upon the previous one. The final plan should be concise, clearly structured, and executable by an Executor Agent.

  Use the following reasoning framework **as a flexible guide** and adjust steps based on the user's task type and needs.

  Step 0. Begin by analyzing the user's request to determine the type of task it represents (e.g., information retrieval, system operation, form submission, etc.).
    #E0 = [Identified task type]

  Then proceed with a plan structure that is suitable for #E0. Here are two reference workflows you may adapt:

  ---  
  **If #E0 == "information retrieval"**, a typical plan may include:
    Step 1. Identify the most relevant website to user's query from website information database. #E1 = [URL]
    Step 2. Read the content of the selected site. #E2 = [Content of #E1]
    Step 3. Evaluate whether the content is sufficient to fulfill the user's query. #E3 = [Sufficiency judgment]
    Step 4. If the content is not sufficient, find in-page hyperlinks to better sources. #E4 = [List of links]
    Step 5. If the content is not sufficient, follow the link that is the most relevant to user's query and read new content. #E5 = [New page content]
    Step 6. IF the information is sufficient to fulfill the user's query, extract final information by synthesizing and integrating all detailed information gathered in previous steps into a comprehensive, user-focused summary that directly addresses the user's request with specific data. #E6 = [Final answer]

  ---  
  **If #E0 == "system operation"**, a typical plan (e.g. full plan of leave application) may include:
    Step 1. navigate to https://cis.ncu.edu.tw/iNCU/stdAffair/leaveRequest #E1 = [Output of the tool]
    Step 2. Input the user's account information into the field labeled 'Account' #E2 = [Output of the tool]
    Step 3. Input the user's password into the field labeled 'Password' #E3 = [Output of the tool]
    Step 4. Click the button with the text 'Login to Portal' #E4 = [Output of the tool]
    Step 5. Click the button with the text 'Go to' #E5 = [Output of the tool]
    Step 6. Click the button with the text '申請' #E6 = [Output of the tool]

    Notice: 
      You should not change the order, the content, and the expect result of the steps in the above plan.

  ---  

  These templates are examples to **guide** your planning based on the actual user request.

  Do not include step 0 in the output. The first step should begin at Step 1. Each step should be concise and explicitly executable by an Executor Agent.

  User Input:
  ```

